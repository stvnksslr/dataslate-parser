name: build

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags-ignore:
      - "*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.8]
    steps:
      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.3
        with:
          create_virtualenvs: true

      - name: Set Poetry Configs
        run: poetry config settings.virtualenvs.path ~/.virtualenvs

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Linting
        run: poetry run flake8

      - name: Tests
        uses: paambaati/codeclimate-action@v2.3.0
        env:
          CI: "true"
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: poetry run pytest --cov-branch --cov-report xml --cov=app app
